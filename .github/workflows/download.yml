name: Deploy Pyodide with Matplotlib and Pillow

on:
  push:
    branches:
      - main1
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # 设置超时时间

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 创建部署目录
        run: |
          # 创建基本目录结构
          mkdir -p dist/static/pyodide
         
      - name: 下载 Pyodide 核心文件
        run: |
          cd dist/static/pyodide
          PYODIDE_VERSION=0.25.0
          BASE_URL="https://cdn.jsdelivr.net/pyodide/v${PYODIDE_VERSION}/full"
          
          # 下载核心文件
          curl -O ${BASE_URL}/pyodide.js
          curl -O ${BASE_URL}/pyodide.asm.js
          curl -O ${BASE_URL}/pyodide.asm.wasm
          curl -O ${BASE_URL}/repodata.json
          
          echo "Pyodide 核心文件下载完成"

      - name: 下载 matplotlib 和 pillow
        run: |
          cd dist/static/pyodide
          PYODIDE_VERSION=0.25.0
          BASE_URL="https://cdn.jsdelivr.net/pyodide/v${PYODIDE_VERSION}/full"
          
          # 下载 matplotlib 及其依赖
          curl -O ${BASE_URL}/matplotlib.js
          curl -O ${BASE_URL}/matplotlib.data
          
          # 下载 pillow (PIL)
          curl -O ${BASE_URL}/PIL.js
          curl -O ${BASE_URL}/PIL.data
          
          # 下载 matplotlib 的依赖
          curl -O ${BASE_URL}/numpy.js
          curl -O ${BASE_URL}/numpy.data
          curl -O ${BASE_URL}/kiwisolver.js
          curl -O ${BASE_URL}/kiwisolver.data
          curl -O ${BASE_URL}/packaging.js
          curl -O ${BASE_URL}/packaging.data
          
          echo "matplotlib 和 pillow 下载完成"



      - name: 部署到 GitHub main
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true
          user_name: 'GitHub Actions'
          user_email: 'actions@github.com'

permissions:
  contents: write
  pages: write

concurrency:
  group: github-main
  cancel-in-progress: true