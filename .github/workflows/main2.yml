name: Build Pyodide & Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 拉取代
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      # 构建 Pyodide（带 Emscripten 安装）
      - name: Docker 构建 Pyodide
        run: |
          # 创建构建脚本
          cat > build.sh << 'EOL'
          #!/bin/bash
          set -ex
          
          # 1. 设置非交环境
          export DEBIAN_FRONTEND=noninteractive
          export TZ=Asia/Shanghai
          ln -fs /usr/share/zoneinfo/$TZ /etc/localtime
          apt-get update
          apt-get install -y tzdata
          dpkg-reconfigure --frontend noninteractive tzdata
          
          # 2. 安装基础依赖
          apt-get install -y \
            software-properties-common \
            build-essential \
            cmake \
            nodejs \
            npm \
            git \
            curl \
            make \
            g++ \
            python3 \
            python3-pip \
            python3-venv
          
          # 3. 安装 Python 3.11
          add-apt-repository -y ppa:deadsnakes/ppa
          apt-get install -y python3.11 python3.11-dev python3.11-venv
          
          # 4. 安装 Emscripten 3.1.46（核心修复）
          echo "安装 Emscripten 3.1.46..."
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install 3.1.46
          ./emsdk activate 3.1.46
          source ./emsdkenv.sh
          cd ..
          
          # 5. 验证 Emscripten
          emcc --version
          
          # 6. 创建虚拟环境
          python3.11 -m venv /venv
          source /venv/bin/activate
          
          # 7. 安装 Pyodide 构建工具
          pip install pyodide-build==0.25.0
          
          # 8. 执行构建
          pyodide build --output-dir ./dist/static/pyodide --meta-yaml-path ./pyodide_meta.yaml
          
          # 9. 修复权限
          chmod -R 777 ./dist
          EOL
          
          # 执行 Docker 构建
          docker run --rm \
            -e DEBIAN_FRONTEND=noninteractive \
            -e TZ=Asia/Shanghai \
            -v "$PWD":/work \
            -w /work \
            ubuntu:22.04 \
            bash -c "apt-get update && bash build.sh"
          
          # 调试输出
          echo "Pyodide 构建完成！"
          echo "核心文件检查:"
          ls -lh dist/static/pyodide/pyodide.js

      # 部署到 GitHub Pages
      - name: 部署到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          force_orphan: true

permissions:
  contents: write
  pages: write

concurrency:
  group: github-pages
  cancel-in-progress: true