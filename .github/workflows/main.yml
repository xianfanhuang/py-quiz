name: Build Pyodide & Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      # 修复1：使用正确的官方镜像名称
      - name: 构建Pyodide（官方镜像）
        run: |
          mkdir -p dist/static/pyodide
          
          # 修正镜像名称（去掉空格）
          docker run --rm \
            -v "$PWD":/work \
            -w /work \
            pyodide/pyodide:0.25.0 \
            pyodide build --output-dir ./dist/static/pyodide --meta-yaml-path ./pyodide_meta.yaml
          
          echo "构建产物列表:"
          find ./dist -type f | sort
          
          sudo chown -R $USER:$USER ./dist

      # 修复2：优化手动构建方案
      - name: 构建Pyodide（手动）
        if: failure()  # 仅当官方镜像构建失败时执行
        run: |
          cat > build.sh << 'EOL'
          #!/bin/bash
          set -ex
          
          export DEBIAN_FRONTEND=noninteractive
          export TZ=Asia/Shanghai
          
          # 1. 安装基础依赖
          apt-get update
          apt-get install -y --no-install-recommends \
              build-essential \
              cmake \
              nodejs \
              npm \
              git \
              curl \
              make \
              g++ \
              libssl-dev \
              zlib1g-dev \
              libffi-dev \
              libsqlite3-dev \
              libbz2-dev \
              liblzma-dev \
              tk-dev
          
          # 2. 直接从源代码编译Python 3.11（避免PPA问题）
          PYTHON_VERSION=3.11.13
          curl -O https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz
          tar -xzf Python-${PYTHON_VERSION}.tgz
          cd Python-${PYTHON_VERSION}
          ./configure --enable-optimizations
          make -j $(nproc)
          make altinstall
          cd ..
          rm -rf Python-${PYTHON_VERSION}*
          
          # 3. 验证Python安装
          python3.11 --version
          
          # 4. 创建虚拟环境
          python3.11 -m venv /venv
          source /venv/bin/activate
          
          # 5. 安装Pyodide构建工具
          pip install pyodide-build==0.25.0
          
          # 6. 执行构建
          pyodide build --output-dir ./dist/static/pyodide --meta-yaml-path ./pyodide_meta.yaml
          
          # 7. 修复权限
          chmod -R 777 ./dist
          EOL
          
          # 执行构建
          docker run --rm -v "$PWD":/work -w /work ubuntu:22.04 bash build.sh
          
          echo "手动构建产物列表:"
          find ./dist -type f | sort

      - name: 验证构建产物
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ 错误：dist目录未生成"
            exit 1
          fi
          
          if [ ! -f "dist/static/pyodide/pyodide.js" ]; then
            echo "❌ 错误：pyodide.js未生成"
            echo "当前目录内容:"
            ls -la
            echo "dist目录内容:"
            ls -la dist || true
            echo "static目录内容:"
            ls -la dist/static || true
            exit 1
          fi
          
          echo "✅ 构建产物验证通过"

      - name: 部署到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          force_orphan: true

permissions:
  contents: write
  pages: write

concurrency:
  group: github-pages
  cancel-in-progress: true