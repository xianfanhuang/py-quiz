name: Deploy Pyodide with Matplotlib and Pillow

on:
  push:
    branches:
      - deploy
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # 设置超时时间

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 创建部署目录
        run: |
          # 创建基本目录结构
          mkdir -p dist/static/pyodide
          mkdir -p dist/static/css
          mkdir -p dist/static/js
          
          # 复制前端文件
          cp index.html dist/
          cp -r static/css dist/static/
          cp -r static/js dist/static/

      - name: 下载 Pyodide 核心文件
        run: |
          cd dist/static/pyodide
          PYODIDE_VERSION=0.25.0
          BASE_URL="https://cdn.jsdelivr.net/pyodide/v${PYODIDE_VERSION}/full"
          
          # 下载核心文件
          curl -O ${BASE_URL}/pyodide.js
          curl -O ${BASE_URL}/pyodide.asm.js
          curl -O ${BASE_URL}/pyodide.asm.wasm
          curl -O ${BASE_URL}/repodata.json
          
          echo "Pyodide 核心文件下载完成"

      - name: 下载 matplotlib 和 pillow
        run: |
          cd dist/static/pyodide
          PYODIDE_VERSION=0.25.0
          BASE_URL="https://cdn.jsdelivr.net/pyodide/v${PYODIDE_VERSION}/full"
          
          # 下载 matplotlib 及其依赖
          curl -O ${BASE_URL}/matplotlib.js
          curl -O ${BASE_URL}/matplotlib.data
          
          # 下载 pillow (PIL)
          curl -O ${BASE_URL}/PIL.js
          curl -O ${BASE_URL}/PIL.data
          
          # 下载 matplotlib 的依赖
          curl -O ${BASE_URL}/numpy.js
          curl -O ${BASE_URL}/numpy.data
          curl -O ${BASE_URL}/kiwisolver.js
          curl -O ${BASE_URL}/kiwisolver.data
          curl -O ${BASE_URL}/packaging.js
          curl -O ${BASE_URL}/packaging.data
          
          echo "matplotlib 和 pillow 下载完成"

      - name: 更新 HTML 加载路径
        run: |
          # 修改 index.html 中的 Pyodide 加载路径
          sed -i 's|https://cdn.jsdelivr.net/pyodide/.*/full/|static/pyodide/|g' dist/index.html
          
          # 确保使用相对路径
          sed -i 's|/static/|static/|g' dist/index.html
          
          # 添加预加载包
          echo '<script>' >> dist/index.html
          echo '  async function main() {' >> dist/index.html
          echo '    const pyodide = await loadPyodide({' >> dist/index.html
          echo '      indexURL: "static/pyodide",' >> dist/index.html
          echo '      packages: ["matplotlib", "PIL"]' >> dist/index.html
          echo '    });' >> dist/index.html
          echo '    // 您的 Python 代码在这里' >> dist/index.html
          echo '  }' >> dist/index.html
          echo '  main();' >> dist/index.html
          echo '</script>' >> dist/index.html

      - name: 部署到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          force_orphan: true
          user_name: 'GitHub Actions'
          user_email: 'actions@github.com'

permissions:
  contents: write
  pages: write

concurrency:
  group: github-pages
  cancel-in-progress: true
